{"version":3,"sources":["components/shop-header/index.js","components/shop-header/shop-header.js","components/book-item/index.js","components/book-item/book-item.js","actions/index.js","components/booksstore-service-context/booksstore-cervice-context.js","components/hoc/withBooksstoreService.js","utils/compose.js","components/spinner/index.js","components/spinner/spinner.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/books-list/books-list.js","components/books-list/index.js","components/pages/home-page.js","components/shopping-cart-table/shopping-cart-table.js","components/shopping-cart-table/index.js","components/pages/cart-page.js","components/app/index.js","components/app/app.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","services/bookstore-service.js","reducers/updateBookList.js","reducers/updateShoppingCart.js","reducers/index.js","store.js","index.js"],"names":["ShopHeader","connect","shoppingCart","orderTotal","numItems","totalCounter","total","className","to","BookItem","book","onAddedToCart","title","author","price","coverImage","src","alt","onClick","booksLoaded","newBooks","type","payload","booksError","error","bookAddedToCart","bookId","fetchBooks","booksstoreService","dispatch","getBooks","then","data","catch","err","React","createContext","BooksstoreServiceProvider","Provider","BooksstoreServiceConsumer","Consumer","withBooksstoreService","Wrapped","props","compose","funcs","comp","reduceRight","wrapper","f","Spinner","ErrorIndocator","BookList","books","map","key","id","BooksListContainer","this","loading","Component","BooksList","bookList","bindActionCreators","HomePage","mapDispatchToProps","onIncrease","onDecrease","onDelete","ShoppingCartTable","items","cartItems","item","idx","count","CartPage","App","role","path","component","exact","ErrorBoundry","state","hasError","setState","children","BooksStoreService","Promise","resolve","reject","setTimeout","updateBookList","action","undefined","updateCartItems","slice","updateOrder","quantity","find","itemIndex","findIndex","newItem","updateCartItem","updateShoppingCart","reducer","store","createStore","applyMiddleware","thunkMiddlware","next","getState","console","log","BooksstoreService","ReactDOM","render","value","document","getElementById"],"mappings":"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","file":"static/js/main.fa95e051.chunk.js","sourcesContent":["import ShopHeader from './shop-header'\n\nexport default ShopHeader","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport './shop-header.css'\n\nconst ShopHeader = ({numItems, total}) => {\n    return (\n        <header className='shop-header row'>\n            <Link to='/'>\n                <div className='logo text-dark'>ReStore</div>\n            </Link>\n            <Link to='/cart'>\n                <div className='shopping-cart'>\n                    <i className='cart-icon fa fa-shopping-cart'/>\n                    {numItems} items (${total})\n                </div>\n            </Link>\n        </header>\n    )\n}\n\nconst mapStateToProps = ({shoppingCart: {orderTotal, totalCounter}}) => {\n    return {\n        numItems: totalCounter,\n        total: orderTotal\n    }\n}\n\nexport default connect(mapStateToProps)(ShopHeader)","import BookItem from './book-item'\n\nexport default BookItem","import React from 'react'\nimport './book-item.css'\n\nconst BookItem = ({book, onAddedToCart}) => {\n    const {title, author, price, coverImage} = book\n    return (\n        <div className='book-list-item'>\n            <div className='book-cover'>\n                <img src={coverImage} alt={title}/>\n            </div>\n            <div className='book-details'>\n                <span className='book-title'>{title}</span> \n                <div className='book-author'>{author}</div>\n                <div className='book-price'>${price}</div>\n                <button onClick={onAddedToCart} className='btn btn-info add-to-cart'>Add to cart</button>\n            </div>\n        </div>\n    )\n} \n\nexport default BookItem","const booksRequested = () => {\n    return {\n        type: 'FETCH_BOOKS_REQUESTED'\n    }\n}\nconst booksLoaded = (newBooks) => {\n    return {\n        type: 'FETCH_BOOKS_SUCCESS',\n        payload: newBooks\n    }\n}\nconst booksError = (error) => {\n    return {\n        type: 'FETCH_BOOKS_FAILIRE',\n        payload: error\n    }\n}\nconst bookAddedToCart = (bookId) => {\n    return {\n        type: 'BOOK_ADDED_TO_CART',\n        payload: bookId\n    }\n}\nconst bookDeletedFromCart = (bookId) => {\n    return {\n        type: 'BOOK_DELETED_FROM_CART',\n        payload: bookId\n    }\n}\nconst bookDecreaseFromCart = (bookId) => {\n    return {\n        type: 'BOOK_DECREASE_FROM_CART',\n        payload: bookId\n    }\n}\nconst fetchBooksOld = (booksstoreService, dispatch) => () => {\n    dispatch(booksRequested())\n    booksstoreService.getBooks()\n        .then((data)=> dispatch(booksLoaded(data)))\n        .catch((err)=> dispatch(booksError(err)))\n}\n\nconst fetchBooks = (booksstoreService) => () => (dispatch) => {\n    dispatch(booksRequested())\n    booksstoreService.getBooks()\n        .then((data)=> dispatch(booksLoaded(data)))\n        .catch((err)=> dispatch(booksError(err)))   \n}\n\nexport {\n    fetchBooks,\n    bookAddedToCart,\n    bookDeletedFromCart,\n    bookDecreaseFromCart\n}","import React from 'react'\n\nconst  {\n    Provider: BooksstoreServiceProvider,\n    Consumer: BooksstoreServiceConsumer\n} = React.createContext()\n\nexport {\n    BooksstoreServiceConsumer,\n    BooksstoreServiceProvider\n}","import React from 'react' \nimport {BooksstoreServiceConsumer} from '../booksstore-service-context'\n\nconst withBooksstoreService = () => (Wrapped) => {\n    return (props) => {\n        return (\n            <BooksstoreServiceConsumer>\n                {\n                    (booksstoreService) => {\n                        return ( \n                            <Wrapped {...props} \n                                booksstoreService={booksstoreService}/>\n                        )\n                    }\n                }\n            </BooksstoreServiceConsumer>\n        )\n    }\n}\n\nexport default withBooksstoreService","const compose = (...funcs) => (comp) => {\n    return funcs.reduceRight(\n        (wrapper, f) => f(wrapper), comp)\n}\n\nexport default compose","import Spinner from './spinner'\n\nexport default Spinner","import React from 'react'\nimport './spinner.css'\n\nconst Spinner = () => {\n    return <div>Loading</div>\n} \n\nexport default Spinner","import ErrorIndocator from './error-indicator'\n\nexport default ErrorIndocator","import React from 'react'\nimport './error-indicator.css'\n\nconst ErrorIndocator = () => {\n    return <div>Error!</div>\n} \n\nexport default ErrorIndocator","import React, {Component} from 'react'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\nimport BookItem from '../book-item'\nimport {fetchBooks, bookAddedToCart} from '../../actions'\nimport {withBooksstoreService} from '../hoc'\nimport {compose} from '../../utils'\nimport Spinner from '../spinner'\nimport ErorrIndicator from '../error-indicator'\nimport './books-list.css'\n\nconst BookList = ({books, onAddedToCart}) => {\n    return (\n        <ul className='books-list'>\n            {\n                books.map((book) => {\n                    return (\n                        <li key={book.id}>\n                            <BookItem book={book} onAddedToCart={() => onAddedToCart(book.id)}/>\n                        </li>\n                    )\n                })\n            }\n        </ul>\n    )\n}\n\nclass BooksListContainer extends Component {\n\n    componentDidMount() {\n        const {fetchBooks} = this.props\n        fetchBooks()\n    }\n\n    render() {\n        const {books, loading, error, onAddedToCart} = this.props\n\n        if(loading) return <Spinner/>\n\n        if(error) return <ErorrIndicator/>\n\n        return <BookList books={books} onAddedToCart={onAddedToCart}/>\n    }\n}\n\nconst mapStateToProps = ({bookList: {books, loading, error}}) => {\n    return {books, loading, error}\n}\nconst mapDispatchToProps = (dispatch, {booksstoreService}) => {\n    return bindActionCreators ({\n        fetchBooks: fetchBooks(booksstoreService),\n        onAddedToCart: bookAddedToCart\n    }, dispatch)\n}\n\nexport default compose(\n    withBooksstoreService(),\n    connect(mapStateToProps, mapDispatchToProps),\n)(BooksListContainer)","import BooksList from './books-list'\n\nexport default BooksList","import React from 'react'\nimport BookList from '../books-list'\n\nconst HomePage = () => {\n    return (\n        <div>\n            <BookList/>\n        </div>\n    )\n}\n\nexport default HomePage","import React from 'react'\nimport {connect} from 'react-redux'\nimport {bookAddedToCart, bookDecreaseFromCart, bookDeletedFromCart} from '../../actions'\nimport './shopping-cart-table.css'\n\nconst ShoppingCartTable = ({items, total, onIncrease, onDecrease, onDelete}) => {\n    const renderRow = (item, idx) => {\n        const {id, title, count, total } = item\n        return (\n            <tr key={id}>\n                <td>{idx+1}</td>\n                <td>{title}</td>\n                <td>{count}</td>\n                <td>${total}</td>\n                <td>\n                    <button onClick={()=> onIncrease(id)} className='btn btn-outline-success'>\n                        <i className='fa fa-plus-circle'/>\n                    </button>\n                    <button onClick={()=> onDecrease(id)} className='btn btn-outline-warning'>\n                        <i className='fa fa-minus-circle'/>\n                    </button>\n                    <button onClick={()=> onDelete(id)} className='btn btn-outline-danger'>\n                        <i className='fa fa-trash-o'/>\n                    </button>\n                </td>\n            </tr>\n        )\n    }\n\n    return (\n        <div className='shopping-cart-table'>\n            <h2>Your order</h2>\n            <table className='table'>\n                <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>Item</th>\n                        <th>Count</th>\n                        <th>Total price</th>\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {items.map(renderRow)}\n                </tbody>\n            </table>\n\n            <div className='total'>\n                Total: ${total}\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = ({shoppingCart: {cartItems, orderTotal}}) => {\n    return {\n        items: cartItems,\n        total: orderTotal\n    }\n}\n\nconst mapDispatchToProps =  {\n    onIncrease: bookAddedToCart,\n    onDecrease: bookDecreaseFromCart,\n    onDelete: bookDeletedFromCart\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCartTable)","import ShoppingCartTable from './shopping-cart-table'\n\nexport default ShoppingCartTable","import React from 'react'\nimport ShoppingCartTable from '../shopping-cart-table'\n\nconst CartPage = () => {\n    return <ShoppingCartTable/>\n}\n\nexport default CartPage","import App from './app'\n\nexport default App","import React from 'react'\nimport {Route, Switch} from 'react-router-dom'\nimport ShopHeader from '../shop-header'\nimport {HomePage, CartPage} from '../pages'\nimport './app.css'\n\nconst App = () => {\n    return (\n        <main role='main' className='container'>\n            <ShopHeader numItems={5} total={210}/>\n            <Switch>\n                <Route path='/' component={HomePage} exact/>\n                <Route path='/cart/' component={CartPage}/>\n            </Switch>\n        </main>\n    )\n} \n\nexport default App","import ErrorBoundry from './error-boundry'\n\nexport default ErrorBoundry","import React, { Component } from 'react'\nimport ErrorIndicator from '../error-indicator'\n\nexport default class ErrorBoundry extends Component {\n    state = {\n        hasError: false\n    }\n\n    componentDidCatch() {\n        this.setState({hasError: true})\n    }\n\n    render() {\n        if(this.state.hasError) {\n            return <ErrorIndicator/>\n        }\n\n        return this.props.children\n    }\n}","export default class BooksStoreService {\n\n    data = [\n        {\n            id: 1, \n            title: 'Production-Ready Microservices',\n            author: 'Susan J. Fowler',\n            price: 32,\n            coverImage: 'https://images-na.ssl-images-amazon.com/images/I/51oxXEG6TRL._SX379_BO1,204,203,200_.jpg'\n        },\n        {\n            id: 2, \n            title: 'Relise It!',\n            author: 'Michsel T. Nygard',\n            price: 45,\n            coverImage: 'https://images-na.ssl-images-amazon.com/images/I/51609YUH2mL._SX379_BO1,204,203,200_.jpg'\n        },\n    ]\n\n    getBooks() {\n        return new Promise((resolve,reject) => {\n            setTimeout(() => {\n                resolve(this.data)\n                //reject(new Error('Something wrong!'))\n            }, 700)\n        })\n    }\n}","const updateBookList = (state, action) => {\n    if(state === undefined) {\n        return {\n            books: [],\n            loading: true,\n            error: null\n        }\n    }\n    switch (action.type) {\n        case 'FETCH_BOOKS_REQUESTED':\n            return {\n                books: [],\n                loading: true,\n                error: null\n            }\n        case 'FETCH_BOOKS_SUCCESS':\n            return {\n                books: action.payload,\n                loading: false,\n                error: null\n            }\n        case 'FETCH_BOOKS_FAILIRE': \n            return {\n                books: [],\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state.bookList\n    }\n}\n\nexport default updateBookList","const updateCartItems = (cartItems, item, idx) => {\n    if(item.count === 0) {\n        return [\n            ...cartItems.slice(0, idx),\n            ...cartItems.slice(idx+1)\n        ]\n    }\n    if (idx === -1) {\n        return [\n            ...cartItems,\n            item\n        ]\n    }\n    return [\n        ...cartItems.slice(0, idx),\n        item,\n        ...cartItems.slice(idx+1)\n    ]\n}\n\nconst updateCartItem = (book, item={}, quantity) => {\n    const {\n        id=book.id, \n        count=0, \n        title=book.title, \n        total=0\n    } = item\n    return {\n        id,\n        title,\n        count: count+quantity,\n        total: total + quantity*book.price\n    }\n}\n\nconst updateOrder = (state, bookId, quantity) => {\n    const {bookList: {books}, shoppingCart: {cartItems, orderTotal, totalCounter}} = state\n    const book = books.find(({id}) => id === bookId) \n    const itemIndex = cartItems.findIndex((book) => book.id === bookId)\n    const item = cartItems[itemIndex]\n    const newItem = updateCartItem(book, item, quantity)\n\n    return {\n        orderTotal: orderTotal+quantity*book.price,\n        totalCounter: totalCounter+quantity,\n        cartItems: updateCartItems(cartItems, newItem, itemIndex)\n    }\n}\n\nconst updateShoppingCart = (state, action) => {\n    if (state === undefined) {\n        return {\n            cartItems: [],\n            orderTotal: 0,\n            totalCounter: 0,\n        }\n    }\n    switch (action.type) {\n        case 'BOOK_ADDED_TO_CART':\n            return updateOrder(state, action.payload, 1)\n        case 'BOOK_DECREASE_FROM_CART':\n            return updateOrder(state, action.payload, -1)\n        case 'BOOK_DELETED_FROM_CART':\n            const item = state.shoppingCart.cartItems.find(({id}) => id === action.payload)\n            return updateOrder(state, action.payload, -item.count)\n        default:\n            return state.shoppingCart\n    }\n}\n\nexport default updateShoppingCart","import updateBookList from './updateBookList'\nimport updateShoppingCart from './updateShoppingCart'\n\nconst reducer = (state, action) => {\n    return {\n        bookList:updateBookList(state,action),\n        shoppingCart: updateShoppingCart(state,action)\n    }\n}\n\nexport default reducer","import {createStore, applyMiddleware} from 'redux'\nimport reducer from './reducers'\nimport thunkMiddlware from 'redux-thunk'\n\nconst logMiddlware = ({getState}) => (next) => (action) => {\n    console.log(action.type, getState())\n    return next(action)\n}\n\nconst stringMiddlware = () => (next) => (action) => {\n    if(typeof action === 'string') {\n        return next({\n            type: action\n        })\n    }\n    return next(action)\n}\n\nconst store = createStore(reducer, applyMiddleware(thunkMiddlware, stringMiddlware, logMiddlware))\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {Provider} from 'react-redux'\nimport {BrowserRouter as Router} from 'react-router-dom'\n\nimport App from './components/app'\nimport ErrorBoundry from './components/error-boundry'\nimport BooksstoreService from './services/bookstore-service'\nimport {BooksstoreServiceProvider} from './components/booksstore-service-context'\n\nimport store from './store'\n\nconst booksstoreService = new BooksstoreService()\n\nReactDOM.render(\n    <Provider store={store}>\n        <ErrorBoundry>\n            <BooksstoreServiceProvider value={booksstoreService}>\n                <Router>\n                    <App/>\n                </Router>\n            </BooksstoreServiceProvider>\n        </ErrorBoundry>\n    </Provider>,\n    document.getElementById('root')\n)"],"sourceRoot":""}